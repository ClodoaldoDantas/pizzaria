{"version":3,"sources":["components/ActiveLink/index.tsx","components/Sidebar/SidebarNav/index.tsx","components/Sidebar/index.tsx","services/api.ts","components/PageHeader/index.tsx","pages/Products/TableProducts/index.tsx","utils/swal.ts","pages/Products/index.tsx","pages/AddProduct/index.tsx","pages/EditProduct/index.tsx","utils/orderUtils.ts","pages/Orders/TableOrders/index.tsx","pages/Orders/index.tsx","pages/OrderDetails/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["ActiveLink","link","label","icon","shouldMatchExactHref","pathname","useLocation","isActive","includes","to","className","cx","active","navItems","size","SidebarNav","map","navItem","Sidebar","api","axios","create","baseURL","PageHeader","title","TableProducts","products","onEdit","onDelete","Table","striped","bordered","length","colSpan","product","src","image","alt","name","description","Intl","NumberFormat","style","currency","format","price","Button","onClick","_id","variant","Toast","Swal","mixin","toast","position","iconColor","customClass","popup","showConfirmButton","timer","timerProgressBar","showCloseButton","ConfirmDialog","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","Products","useState","setProducts","history","useHistory","productId","a","fire","text","value","delete","filter","useEffect","get","then","response","data","id","push","schema","yup","required","AddProduct","setActive","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","post","Form","onSubmit","Group","Label","Control","type","isInvalid","Feedback","message","as","rows","Check","checked","onChange","event","target","EditProduct","params","useParams","setValue","put","pizza","orderLabels","PENDING","PREPARING","DONE","CANCELLED","orderVariants","TableOrders","orders","onNavigate","order","item","total","Badge","bg","status","OverlayTrigger","placement","overlay","Tooltip","Orders","setOrders","io","on","newOrder","prevState","Audio","process","play","orderId","OrderDetails","setOrder","setStatus","patch","Card","Body","quantity","Select","currentTarget","Footer","goBack","Routes","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f4e2986.chunk.js","sourcesContent":["import cx from 'classnames';\nimport { Link, useLocation } from 'react-router-dom';\n\ntype ActiveLinkProps = {\n  link: string;\n  label: string;\n  icon: JSX.Element;\n  shouldMatchExactHref: boolean;\n};\n\nexport function ActiveLink({\n  link,\n  label,\n  icon,\n  shouldMatchExactHref,\n}: ActiveLinkProps) {\n  const { pathname } = useLocation();\n  let isActive = false;\n\n  if (shouldMatchExactHref && pathname === link) {\n    isActive = true;\n  }\n\n  if (!shouldMatchExactHref && pathname.includes(link)) {\n    isActive = true;\n  }\n\n  return (\n    <Link\n      to={link}\n      className={cx('nav-link', 'text-white', {\n        active: isActive,\n      })}\n    >\n      {icon}\n      <span className=\"ms-2\">{label}</span>\n    </Link>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport { MdLocalPizza, MdRestaurantMenu } from 'react-icons/md';\n\nimport { FaClipboardList } from 'react-icons/fa';\nimport { ActiveLink } from '../../ActiveLink';\nimport './styles.scss';\n\nconst navItems = [\n  {\n    label: 'Produtos',\n    link: '/',\n    icon: <MdRestaurantMenu size={20} />,\n  },\n  {\n    label: 'Pedidos',\n    link: '/orders',\n    icon: <FaClipboardList size={20} />,\n  },\n];\n\nexport function SidebarNav() {\n  return (\n    <>\n      <Link to=\"/\" className=\"text-white text-decoration-none logo\">\n        <MdLocalPizza size={28} />\n        <span className=\"fs-4 ms-1\">Pizzas</span>\n      </Link>\n\n      <hr />\n\n      <ul className=\"nav nav-pills flex-column\">\n        {navItems.map(navItem => (\n          <li key={navItem.label} className=\"nav-item\">\n            <ActiveLink\n              label={navItem.label}\n              link={navItem.link}\n              icon={navItem.icon}\n              shouldMatchExactHref={navItem.label === 'Produtos'}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import { SidebarNav } from './SidebarNav';\nimport './styles.scss';\n\nexport function Sidebar() {\n  return (\n    <div className=\"sidebar bg-dark text-white p-3\">\n      <SidebarNav />\n    </div>\n  );\n}\n","import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: 'https://pizzariaserver.herokuapp.com/',\n});\n","type PageHeaderProps = {\n  title: string;\n};\n\nexport function PageHeader({ title }: PageHeaderProps) {\n  return (\n    <>\n      <h4 className=\"mt-4\">{title}</h4>\n      <hr />\n    </>\n  );\n}\n","import cx from 'classnames';\nimport { Table, Button } from 'react-bootstrap';\nimport { MdEdit, MdDelete } from 'react-icons/md';\nimport { Product } from '../../../interfaces/Product';\nimport './styles.scss';\n\ntype TableProductsProps = {\n  products: Product[];\n  onEdit: (productId: string) => void;\n  onDelete: (productId: string) => void;\n};\n\nexport function TableProducts({\n  products,\n  onEdit,\n  onDelete,\n}: TableProductsProps) {\n  return (\n    <Table striped bordered>\n      <thead>\n        <tr>\n          <th>Imagem</th>\n          <th>Nome</th>\n          <th>Preço</th>\n          <th>Ativo</th>\n          <th>Ações</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {products.length === 0 && (\n          <tr>\n            <td className=\"text-center\" colSpan={5}>\n              Nenhum produto cadastrado 🍕\n            </td>\n          </tr>\n        )}\n\n        {products.map(product => (\n          <tr key={product._id}>\n            <td className=\"product-image\">\n              <img src={product.image} alt={product.name} />\n            </td>\n            <td>\n              <strong>{product.name}</strong>\n              <p className=\"fs-6 fw-light\">{product.description}</p>\n            </td>\n            <td>\n              {new Intl.NumberFormat('pt-BR', {\n                style: 'currency',\n                currency: 'BRL',\n              }).format(product.price)}\n            </td>\n            <td\n              className={cx(\n                { 'text-success': product.active },\n                { 'text-danger': !product.active }\n              )}\n            >\n              {product.active ? 'Sim' : 'Não'}\n            </td>\n            <td>\n              <div className=\"actions\">\n                <Button\n                  onClick={() => onEdit(product._id)}\n                  variant=\"warning\"\n                  size=\"sm\"\n                >\n                  <MdEdit size={18} />\n                </Button>\n\n                <Button\n                  onClick={() => onDelete(product._id)}\n                  variant=\"danger\"\n                  size=\"sm\"\n                >\n                  <MdDelete size={18} />\n                </Button>\n              </div>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n","import Swal from 'sweetalert2';\n\nexport const Toast = Swal.mixin({\n  toast: true,\n  position: 'top-right',\n  iconColor: 'white',\n  customClass: {\n    popup: 'colored-toast',\n  },\n  showConfirmButton: false,\n  timer: 5000,\n  timerProgressBar: true,\n  showCloseButton: true,\n});\n\nexport const ConfirmDialog = Swal.mixin({\n  title: 'Atenção',\n  icon: 'warning',\n  showCancelButton: true,\n  confirmButtonColor: '#34c38f',\n  cancelButtonColor: '#f46a6a',\n  confirmButtonText: 'Sim, quero remover!',\n  cancelButtonText: 'Cancelar',\n});\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { Product } from '../../interfaces/Product';\nimport { api } from '../../services/api';\n\nimport { PageHeader } from '../../components/PageHeader';\nimport { TableProducts } from './TableProducts';\nimport { ConfirmDialog, Toast } from '../../utils/swal';\n\nexport function Products() {\n  const [products, setProducts] = useState<Product[]>([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    api.get('pizzas').then(response => {\n      setProducts(response.data);\n    });\n  }, []);\n\n  function navigateToAddProduct() {\n    history.push('/products/new');\n  }\n\n  function navigateToEditProduct(productId: string) {\n    history.push(`/products/${productId}`);\n  }\n\n  async function deleteProduct(productId: string) {\n    const canDelete = await ConfirmDialog.fire({\n      text: 'Deseja realmente deletar o produto ?',\n    });\n\n    if (canDelete.value) {\n      await api.delete(`/pizzas/${productId}`);\n      setProducts(products.filter(product => product._id !== productId));\n\n      await Toast.fire({\n        icon: 'success',\n        title: 'Produto removido com sucesso',\n      });\n    }\n  }\n\n  return (\n    <section id=\"page-products\">\n      <PageHeader title=\"Produtos\" />\n\n      <Button onClick={navigateToAddProduct} className=\"mb-3\">\n        Adicionar Produto\n      </Button>\n\n      <TableProducts\n        onEdit={navigateToEditProduct}\n        onDelete={deleteProduct}\n        products={products}\n      />\n    </section>\n  );\n}\n","import { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nimport { PageHeader } from '../../components/PageHeader';\nimport { api } from '../../services/api';\nimport { useHistory } from 'react-router-dom';\nimport { Toast } from '../../utils/swal';\n\ntype IFormInputs = {\n  image: string;\n  name: string;\n  price: number;\n  description: string;\n};\n\nconst schema = yup.object({\n  image: yup.string().required('Imagem é obrigatória'),\n  name: yup.string().required('Nome é obrigatório'),\n  price: yup.string().required('Preço é obrigatório'),\n  description: yup.string().required('Descrição é obrigatória'),\n});\n\nexport function AddProduct() {\n  const history = useHistory();\n  const [active, setActive] = useState(true);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<IFormInputs>({\n    resolver: yupResolver(schema),\n  });\n\n  async function onSubmit(data: IFormInputs) {\n    await api.post('pizzas', { ...data, active });\n    history.push('/');\n\n    await Toast.fire({\n      icon: 'success',\n      title: 'Produto adicionado com sucesso',\n    });\n  }\n\n  return (\n    <section id=\"page-products-add\">\n      <PageHeader title=\"Adicionar Produto\" />\n\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Imagem</Form.Label>\n          <Form.Control\n            type=\"text\"\n            isInvalid={!!errors.image}\n            {...register('image')}\n          />\n\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.image?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Nome</Form.Label>\n          <Form.Control\n            type=\"text\"\n            isInvalid={!!errors.name}\n            {...register('name')}\n          />\n\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.name?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Preço</Form.Label>\n          <Form.Control\n            type=\"text\"\n            isInvalid={!!errors.price}\n            {...register('price')}\n          />\n\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.price?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Descrição</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            isInvalid={!!errors.description}\n            {...register('description')}\n          />\n\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.description?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Check\n          checked={active}\n          onChange={event => setActive(event.target.checked)}\n          type=\"switch\"\n          label=\"Ativo\"\n          className=\"mb-3\"\n        />\n\n        <Button className=\"mb-3\" variant=\"primary\" type=\"submit\">\n          Salvar Produto\n        </Button>\n      </Form>\n    </section>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nimport { PageHeader } from '../../components/PageHeader';\nimport { Product } from '../../interfaces/Product';\nimport { api } from '../../services/api';\nimport { Toast } from '../../utils/swal';\n\ntype Params = {\n  id: string;\n};\n\ntype IFormInputs = {\n  image: string;\n  name: string;\n  price: number;\n  description: string;\n};\n\nconst schema = yup.object({\n  image: yup.string().required('Imagem é obrigatória'),\n  name: yup.string().required('Nome é obrigatório'),\n  price: yup.string().required('Preço é obrigatório'),\n  description: yup.string().required('Descrição é obrigatória'),\n});\n\nexport function EditProduct() {\n  const history = useHistory();\n  const params = useParams<Params>();\n  const [active, setActive] = useState(true);\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm<IFormInputs>({\n    resolver: yupResolver(schema),\n  });\n\n  async function onSubmit(data: IFormInputs) {\n    await api.put(`/pizzas/${params.id}`, { ...data, active });\n    history.push('/');\n\n    await Toast.fire({\n      icon: 'success',\n      title: 'Produto editado com sucesso',\n    });\n  }\n\n  useEffect(() => {\n    api.get(`/pizzas/${params.id}`).then(response => {\n      const pizza: Product = response.data;\n      setValue('image', pizza.image);\n      setValue('name', pizza.name);\n      setValue('price', pizza.price);\n      setValue('description', pizza.description);\n\n      setActive(pizza.active);\n    });\n  }, [setValue, params.id]);\n\n  return (\n    <section id=\"page-products-add\">\n      <PageHeader title=\"Editar Produto\" />\n\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Imagem</Form.Label>\n          <Form.Control\n            type=\"url\"\n            isInvalid={!!errors.image}\n            {...register('image')}\n          />\n\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.image?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Nome</Form.Label>\n          <Form.Control\n            type=\"text\"\n            isInvalid={!!errors.name}\n            {...register('name')}\n          />\n\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.name?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Preço</Form.Label>\n          <Form.Control\n            type=\"text\"\n            isInvalid={!!errors.price}\n            {...register('price')}\n          />\n\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.price?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Descrição</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            isInvalid={!!errors.description}\n            {...register('description')}\n          />\n\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.description?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Check\n          checked={active}\n          onChange={event => setActive(event.target.checked)}\n          type=\"switch\"\n          label=\"Ativo\"\n          className=\"mb-3\"\n        />\n\n        <Button className=\"mb-3\" variant=\"primary\" type=\"submit\">\n          Salvar Produto\n        </Button>\n      </Form>\n    </section>\n  );\n}\n","export const orderLabels = {\n  PENDING: 'Pendente',\n  PREPARING: 'Preparando',\n  DONE: 'Entregue',\n  CANCELLED: 'Cancelado',\n};\n\nexport const orderVariants = {\n  PENDING: 'secondary',\n  PREPARING: 'warning',\n  DONE: 'success',\n  CANCELLED: 'danger',\n};\n","import { Badge, Table, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { FaHammer } from 'react-icons/fa';\nimport { Order } from '../../../interfaces/Order';\nimport { orderLabels, orderVariants } from '../../../utils/orderUtils';\n\ntype TableOrdersProps = {\n  orders: Order[];\n  onNavigate: (orderId: string) => void;\n};\n\nexport function TableOrders({ orders, onNavigate }: TableOrdersProps) {\n  return (\n    <Table striped bordered>\n      <thead>\n        <tr>\n          <th>ID do pedido</th>\n          <th>Item</th>\n          <th>Total</th>\n          <th>Status</th>\n          <th className=\"text-center\">Ações</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {orders.length === 0 && (\n          <tr>\n            <td className=\"text-center\" colSpan={5}>\n              Sem pedidos 🍕\n            </td>\n          </tr>\n        )}\n\n        {orders.map(order => (\n          <tr key={order._id}>\n            <td>#{order._id}</td>\n            <td>{order.item.name}</td>\n            <td>\n              {new Intl.NumberFormat('pt-BR', {\n                style: 'currency',\n                currency: 'BRL',\n              }).format(order.total)}\n            </td>\n            <td>\n              <Badge bg={orderVariants[order.status]}>\n                {orderLabels[order.status]}\n              </Badge>\n            </td>\n            <td className=\"text-center\">\n              <OverlayTrigger\n                placement=\"top-end\"\n                overlay={<Tooltip>Detalhes do pedido</Tooltip>}\n              >\n                <Button\n                  onClick={() => onNavigate(order._id)}\n                  variant=\"primary\"\n                  size=\"sm\"\n                >\n                  <FaHammer size={18} />\n                </Button>\n              </OverlayTrigger>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { io } from 'socket.io-client';\n\nimport { Order } from '../../interfaces/Order';\nimport { api } from '../../services/api';\nimport { Toast } from '../../utils/swal';\nimport { PageHeader } from '../../components/PageHeader';\nimport { TableOrders } from './TableOrders';\n\nexport function Orders() {\n  const history = useHistory();\n  const [orders, setOrders] = useState<Order[]>([]);\n\n  useEffect(() => {\n    api.get('orders').then(response => {\n      setOrders(response.data);\n    });\n\n    const socket = io('https://pizzariaserver.herokuapp.com/');\n\n    socket.on('newOrder', async data => {\n      const newOrder: Order = data;\n      setOrders(prevState => [newOrder, ...prevState]);\n\n      new Audio(`${process.env.PUBLIC_URL}/notification.mp3`).play();\n\n      await Toast.fire({\n        icon: 'info',\n        title: 'Novo pedido adicionado',\n      });\n    });\n  }, []);\n\n  function navigateToOrderDetails(orderId: string) {\n    history.push(`/orders/${orderId}`);\n  }\n\n  return (\n    <section id=\"page-orders\">\n      <PageHeader title=\"Pedidos\" />\n\n      <TableOrders orders={orders} onNavigate={navigateToOrderDetails} />\n    </section>\n  );\n}\n","import { FormEvent, useEffect, useState } from 'react';\nimport { Badge, Button, Card, Form } from 'react-bootstrap';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { PageHeader } from '../../components/PageHeader';\nimport { Order } from '../../interfaces/Order';\nimport { api } from '../../services/api';\nimport { orderLabels, orderVariants } from '../../utils/orderUtils';\nimport { Toast } from '../../utils/swal';\n\ntype Params = {\n  id: string;\n};\n\nexport function OrderDetails() {\n  const history = useHistory();\n  const params = useParams<Params>();\n  const [order, setOrder] = useState<Order>();\n  const [status, setStatus] = useState('');\n\n  useEffect(() => {\n    api.get(`/orders/${params.id}`).then(response => {\n      const order: Order = response.data;\n      setOrder(order);\n      setStatus(order.status);\n    });\n  }, [params.id]);\n\n  function handleChange(event: FormEvent<HTMLSelectElement>) {\n    setStatus(event.currentTarget.value);\n  }\n\n  async function updateStatus() {\n    const response = await api.patch(`/orders/${params.id}`, { status });\n\n    setOrder(response.data as Order);\n\n    await Toast.fire({\n      icon: 'success',\n      title: 'Status do pedido alterado com sucesso',\n    });\n  }\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <section id=\"page-order-details\">\n      <PageHeader title={`Pedido #${params.id}`} />\n\n      <Card>\n        <Card.Body>\n          <div className=\"fs-6 mb-1\">\n            <strong>Item:</strong>\n            <span className=\"ms-2\">{order.item.name}</span>\n          </div>\n\n          <div className=\"fs-6 mb-1\">\n            <strong>Descrição:</strong>\n            <span className=\"ms-2\">{order.item.description}</span>\n          </div>\n\n          <div className=\"fs-6 mb-1\">\n            <strong>Quantidade:</strong>\n            <span className=\"ms-2\">{order.quantity}</span>\n          </div>\n\n          <div className=\"fs-6 mb-1\">\n            <strong>Total:</strong>\n            <span className=\"ms-2\">\n              {new Intl.NumberFormat('pt-BR', {\n                style: 'currency',\n                currency: 'BRL',\n              }).format(order.total)}\n            </span>\n          </div>\n\n          <div className=\"fs-6 mb-3\">\n            <strong>Status:</strong>\n            <span className=\"ms-2\">\n              <Badge bg={orderVariants[order.status]}>\n                {orderLabels[order.status]}\n              </Badge>\n            </span>\n          </div>\n\n          <Form.Select value={status} onChange={handleChange}>\n            <option>Selecione o status do pedido</option>\n            <option value=\"PENDING\">Pendente</option>\n            <option value=\"PREPARING\">Preparando</option>\n            <option value=\"DONE\">Entregue</option>\n            <option value=\"CANCELLED\">Cancelado</option>\n          </Form.Select>\n        </Card.Body>\n\n        <Card.Footer>\n          <Button onClick={() => history.goBack()} variant=\"secondary\">\n            Voltar\n          </Button>\n          <Button onClick={updateStatus} className=\"ms-2\" variant=\"success\">\n            Alterar Status do pedido\n          </Button>\n        </Card.Footer>\n      </Card>\n    </section>\n  );\n}\n","import { Switch, Route } from 'react-router-dom';\nimport { Products } from '../pages/Products';\nimport { AddProduct } from '../pages/AddProduct';\nimport { EditProduct } from '../pages/EditProduct';\nimport { Orders } from '../pages/Orders';\nimport { OrderDetails } from '../pages/OrderDetails';\n\nexport function Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Products} />\n      <Route path=\"/products/new\" component={AddProduct} />\n      <Route path=\"/products/:id\" component={EditProduct} />\n      <Route exact path=\"/orders\" component={Orders} />\n      <Route path=\"/orders/:id\" component={OrderDetails} />\n    </Switch>\n  );\n}\n","import { BrowserRouter } from 'react-router-dom';\nimport { Sidebar } from './components/Sidebar';\nimport { Routes } from './routes';\n\nexport function App() {\n  return (\n    <BrowserRouter>\n      <div className=\"wrapper\">\n        <Sidebar />\n\n        <main id=\"main-content\" className=\"container-fluid\">\n          <Routes />\n        </main>\n      </div>\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}